@page
@model Inventory.WebApp.Pages.Devices.LogsModel
@{
    ViewData["Title"] = $"{Model.DeviceName} - Değişiklik Logları";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h2><i class="fas fa-list-alt"></i> @Model.DeviceName - Değişiklik Logları</h2>
                <div>
                    <a asp-page="/Devices/Details" asp-route-id="@Model.Id" class="btn btn-info me-2">
                        <i class="fas fa-eye"></i> Cihaz Detayı
                    </a>
                    <a asp-page="/Devices/Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Cihazlar
                    </a>
                </div>
            </div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            <i class="fas fa-exclamation-triangle"></i> @Model.ErrorMessage
        </div>
    }

    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">Tüm Değişiklikler (@Model.ChangeLogs.Count)</h5>
        </div>
        <div class="card-body p-0">
            @if (Model.ChangeLogs.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th style="width: 15%;">Tarih & Saat</th>
                                <th style="width: 15%;">Değişiklik Tipi</th>
                                <th style="width: 30%;">Eski Değer</th>
                                <th style="width: 30%;">Yeni Değer</th>
                                <th style="width: 10%;">Değiştiren</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var log in Model.ChangeLogs)
                            {
                                <tr>
                                    <td>
                                        <small class="text-muted">@log.ChangeDateFormatted</small>
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@log.ChangeType</span>
                                    </td>
                                    <td>
                                        <div class="change-value-container">
                                            <div class="change-value" title="@log.OldValue">
                                                @if (string.IsNullOrEmpty(log.OldValue) || log.OldValue == "-")
                                                {
                                                    <em class="text-muted">Değer yok</em>
                                                }
                                                else
                                                {
                                                    <span class="text-danger">@log.OldValue</span>
                                                }
                                            </div>
                                            @if (!string.IsNullOrEmpty(log.OldValue) && log.OldValue != "-" && log.OldValue.Length > 50)
                                            {
                                                <button class="btn btn-outline-secondary btn-sm expand-btn" 
                                                        onclick="toggleText(this)" 
                                                        title="Metni genişlet/daralt">
                                                    <i class="fas fa-expand-arrows-alt"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="change-value-container">
                                            <div class="change-value" title="@log.NewValue">
                                                @if (string.IsNullOrEmpty(log.NewValue) || log.NewValue == "-")
                                                {
                                                    <em class="text-muted">Değer yok</em>
                                                }
                                                else
                                                {
                                                    <span class="text-success">@log.NewValue</span>
                                                }
                                            </div>
                                            @if (!string.IsNullOrEmpty(log.NewValue) && log.NewValue != "-" && log.NewValue.Length > 50)
                                            {
                                                <button class="btn btn-outline-secondary btn-sm expand-btn" 
                                                        onclick="toggleText(this)" 
                                                        title="Metni genişlet/daralt">
                                                    <i class="fas fa-expand-arrows-alt"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <small>@log.ChangedBy</small>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-list-alt fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">Henüz değişiklik kaydı yok</h5>
                    <p class="text-muted">Bu cihaz için henüz hiçbir değişiklik kaydedilmemiş.</p>
                    <a asp-page="/Devices/Details" asp-route-id="@Model.Id" class="btn btn-primary">
                        <i class="fas fa-eye"></i> Cihaz Detayına Dön
                    </a>
                </div>
            }
        </div>
    </div>

    @if (Model.ChangeLogs.Any())
    {
        <div class="mt-3">
            <small class="text-muted">
                <i class="fas fa-info-circle"></i> 
                Tüm saatler Türkiye saatine (+3 UTC) göre gösterilmektedir. 
                Uzun metinleri görmek için genişlet butonunu kullanabilirsiniz.
            </small>
        </div>
    }
</div>

@section Scripts {
    <script>
        function toggleText(button) {
            const container = button.parentElement;
            const valueDiv = container.querySelector('.change-value');
            const icon = button.querySelector('i');
            
            if (valueDiv.classList.contains('expanded')) {
                valueDiv.classList.remove('expanded');
                icon.className = 'fas fa-expand-arrows-alt';
                button.title = 'Metni genişlet';
            } else {
                valueDiv.classList.add('expanded');
                icon.className = 'fas fa-compress-arrows-alt';
                button.title = 'Metni daralt';
            }
        }

        // Auto-refresh every 30 seconds
        setInterval(function() {
            if (document.visibilityState === 'visible') {
                location.reload();
            }
        }, 30000);
    </script>
}

@section Head {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .table td, .table th {
            vertical-align: middle;
        }
        
        .change-value-container {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .change-value {
            word-break: break-word;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            max-width: 300px;
            flex: 1;
        }
        
        .change-value.expanded {
            white-space: normal;
            max-width: none;
            overflow: visible;
            text-overflow: initial;
        }
        
        .expand-btn {
            padding: 2px 6px;
            font-size: 0.75rem;
            line-height: 1;
            flex-shrink: 0;
        }
        
        .badge {
            font-size: 0.75em;
        }
        
        .text-danger {
            background-color: #f8d7da;
            padding: 2px 4px;
            border-radius: 3px;
        }
        
        .text-success {
            background-color: #d1edeb;
            padding: 2px 4px;
            border-radius: 3px;
        }
        
        small {
            font-size: 0.875em;
        }
    </style>
}