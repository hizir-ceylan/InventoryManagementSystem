# Use the official .NET 8.0 SDK image for building
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build

# Set the working directory
WORKDIR /src

# Copy solution file and project files
COPY *.sln ./
COPY Inventory.Api/Inventory.Api.csproj ./Inventory.Api/
COPY Inventory.Data/Inventory.Data.csproj ./Inventory.Data/
COPY Inventory.Domain/Inventory.Domain.csproj ./Inventory.Domain/
COPY Inventory.Shared/Inventory.Shared.csproj ./Inventory.Shared/
COPY Inventory.Agent.Windows/Inventory.Agent.Windows.csproj ./Inventory.Agent.Windows/

# Restore dependencies
RUN dotnet restore

# Copy the entire source code
COPY . .

# Build the Agent project
WORKDIR /src/Inventory.Agent.Windows
RUN dotnet build -c Release -o /app/build

# Publish the Agent
RUN dotnet publish -c Release -o /app/publish --no-restore

# Use the runtime image
FROM mcr.microsoft.com/dotnet/runtime:8.0 AS runtime

# Set the working directory
WORKDIR /app

# Install necessary tools for system information gathering
RUN apt-get update && apt-get install -y \
    dmidecode \
    lshw \
    util-linux \
    pciutils \
    usbutils \
    hdparm \
    smartmontools \
    net-tools \
    iproute2 \
    procps \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Copy the published app
COPY --from=build /app/publish .

# Create directory for logs
RUN mkdir -p /app/LocalLogs

# Set environment variables
ENV DOTNET_ENVIRONMENT=Production

# Set the entry point - run once and exit for testing
ENTRYPOINT ["dotnet", "Inventory.Agent.Windows.dll"]